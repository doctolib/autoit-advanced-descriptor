// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';


function escaped(s) {
  return s.replace((/;/g), ";;");
}

function addStringDescriptor(acc, key, value) {
  if (value == null) {
    return /* () */0;
  } else {
    acc.push(key + (":" + escaped(value)));
    return /* () */0;
  }
}

function addIntegerDescriptor(acc, key, value) {
  if (value == null) {
    return /* () */0;
  } else {
    acc.push(key + (":" + String(value)));
    return /* () */0;
  }
}

function addBooleanDescriptor(acc, key, value) {
  if (!(value == null) && value) {
    acc.push(key);
    return /* () */0;
  } else {
    return /* () */0;
  }
}

function descriptorTagged(title, className, regexpTitle, regexpClassName, text, last, active, x, y, w, h, instance) {
  var descriptors = /* array */[];
  addStringDescriptor(descriptors, "TITLE", title);
  addStringDescriptor(descriptors, "CLASS", className);
  addStringDescriptor(descriptors, "REGEXPTITLE", regexpTitle);
  addStringDescriptor(descriptors, "REGEXPCLASS", regexpClassName);
  addStringDescriptor(descriptors, "TEXT", text);
  addIntegerDescriptor(descriptors, "INSTANCE", instance);
  addBooleanDescriptor(descriptors, "ACTIVE", active);
  addBooleanDescriptor(descriptors, "LAST", last);
  addIntegerDescriptor(descriptors, "X", x);
  addIntegerDescriptor(descriptors, "Y", y);
  addIntegerDescriptor(descriptors, "W", w);
  addIntegerDescriptor(descriptors, "H", h);
  var body = descriptors.join("; ");
  return "[".concat(body, "]");
}

function descriptor(windowDescription) {
  var title = windowDescription.title;
  var className = windowDescription.className;
  var regexpTitle = windowDescription.regexpTitle;
  var regexpClassName = windowDescription.regexpClassName;
  var text = windowDescription.text;
  var instance = windowDescription.instance;
  var active = windowDescription.active;
  var last = windowDescription.last;
  var x = windowDescription.x;
  var y = windowDescription.y;
  var w = windowDescription.w;
  var h = windowDescription.h;
  return descriptorTagged(title, className, regexpTitle, regexpClassName, text, last, active, x, y, w, h, instance);
}

exports.descriptorTagged = descriptorTagged;
exports.descriptor = descriptor;
/* No side effect */
